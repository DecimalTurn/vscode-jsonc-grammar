name: TextMate Grammar Screenshot

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  screenshot:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TextMate
        run: brew install --cask textmate

      - name: Convert JSON to PLIST
        run: |
          echo "Converting syntaxes/JSONC.tmLanguage.json to JSONC.plist..."
          plutil -convert xml1 syntaxes/JSONC.tmLanguage.json -o JSONC.plist
          
          # Display the resulting plist file content
          # echo "Content of the generated JSONC.plist file:"
          # cat JSONC.plist

      - name: Open file in TextMate (before installing grammar)
        run: |
          echo "Opening TextMate with sample.jsonc (pre-grammar)..."
          open -a "/Applications/TextMate.app" sample.jsonc
          sleep 5

      - name: Create JSONC.tmbundle and install from repo
        run: |
          mkdir -p ~/Library/Application\ Support/TextMate/Bundles/JSONC.tmbundle/Syntaxes
          mkdir -p ~/Library/Application\ Support/TextMate/Bundles/JSONC.tmbundle/Preferences
          
          # Copy the local grammar file from the repo to the bundle
          cp JSONC.plist ~/Library/Application\ Support/TextMate/Bundles/JSONC.tmbundle/Syntaxes/
          
          # Create info.plist with proper bundle information
          cat <<EOF > ~/Library/Application\ Support/TextMate/Bundles/JSONC.tmbundle/info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>contactEmailRot13</key>
            <string>admin@example.com</string>
            <key>contactName</key>
            <string>JSONC Bundle</string>
            <key>description</key>
            <string>Support for JSONC configuration files</string>
            <key>name</key>
            <string>JSONC</string>
            <key>uuid</key>
            <string>$(uuidgen)</string>
          </dict>
          </plist>
          EOF
          
          # Print some debug info
          echo "Created JSONC bundle at: ~/Library/Application Support/TextMate/Bundles/JSONC.tmbundle"
          ls -la ~/Library/Application\ Support/TextMate/Bundles/JSONC.tmbundle/Syntaxes/
            
          
      - name: Reload TextMate bundles
        run: |
          echo "Reloading TextMate bundles..."
          echo "The following line usually returns an error, but bundles are still reloaded"
          osascript reload_bundles.scpt || echo "⚠️ AppleScript error encountered"
          
          # Alternative reload method
          pkill -f TextMate || true
          sleep 2
          
      - name: Reopen TextMate with sample.jsonc (should reload bundles)
        run: |
          echo "Restarting TextMate to ensure grammar takes effect..."
          pkill -f TextMate || true
          sleep 2
          open -a "/Applications/TextMate.app" sample.jsonc
          sleep 5

      - name: Configure TextMate dark theme
        run: |
          echo "Configuring TextMate to use a dark theme..."
          # Try to find Monokai or any dark theme in the TextMate app bundle
          THEME_PATH=$(find /Applications/TextMate.app -name '*Monokai*.tmTheme' -print -quit)
          if [ -z "$THEME_PATH" ]; then
            # Fallback: try to find any dark theme
            THEME_PATH=$(find /Applications/TextMate.app -name '*.tmTheme' | grep -i dark | head -n1)
          fi
          if [ -n "$THEME_PATH" ]; then
            THEME_UUID=$(plutil -extract uuid xml1 -o - "$THEME_PATH" 2>/dev/null | grep -oE '[A-F0-9\-]{36}')
            if [ -n "$THEME_UUID" ]; then
              defaults write com.macromates.TextMate themeUUID "$THEME_UUID"
              echo "Set TextMate theme to $(basename "$THEME_PATH") ($THEME_UUID)"
            else
              echo "Could not extract theme UUID from $THEME_PATH."
            fi
          else
            echo "No dark theme found in TextMate installation."
          fi
          echo "TextMate dark theme configured"

          # Wait for TextMate to apply the theme
          sleep 2

      - name: List installed bundles
        run: |
          echo "Installed bundles:"
          ls -l ~/Library/Application\ Support/TextMate/Bundles || echo "No bundles found"

      - name: Take screenshot after grammar install
        run: |
          mkdir -p screenshots
          screencapture -x screenshots/textmate.png

      - name: Upload screenshot artifacts
        uses: actions/upload-artifact@v4
        with:
          name: textmate-jsonc-syntax-screenshots
          path: screenshots/*.png